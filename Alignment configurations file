// Parameter definitions
params {
    input = "$SCRATCH/thesis/alignment/fastq_files/*{,.1,.2}.fastq.gz"
    genome = "$SCRATCH/thesis/alignment/reference_genome.fa"
    genome_index_dir = "$SCRATCH/thesis/alignment/genome_index"
    genome_index_base = "genome_index"
    outdir = "$SCRATCH/thesis/alignment/results"

    // General resource parameters
    max_memory = 16.GB
    max_cpus = 4
    max_time = 24.h
}

// Profiles
profiles {
    apptainer {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    test {
        process.cpus = 2
        process.memory = '8 GB'
        process.time = '1h'
    }
}

// Process configurations
process {
    executor = 'slurm'
    clusterOptions = '--account=def-mcfarlas'

    withName: ALIGN_AND_SORT {
        cpus = 4
        memory = '16 GB'
        time = '20h'
        container = 'quay.io/biocontainers/mulled-v2-ac74a7f02cebcfcc07d8e8d1d750af9c83b4d45a:1744f68fe955578c63054b55309e05b41c37a80d-0'
    }

    withName: SAMTOOLS_DEPTH {
        cpus = 2
        memory = '4 GB'
        time = '2h'
        container = 'quay.io/biocontainers/samtools:1.15--h1170115_1'
    }
}

// Executor configurations
executor {
    queueSize = 100
    submitRateLimit = '30 sec'
}

// Singularity/Apptainer configurations
singularity {
    enabled = true
    autoMounts = true
    cacheDir = "$SCRATCH/.singularity"
    pullTimeout = '1h'
}

// Reporting configurations
timeline {
    enabled = true
    file = "${params.outdir}/execution_timeline.html"
}

report {
    enabled = true
    file = "${params.outdir}/execution_report.html"
}

trace {
    enabled = true
    file = "${params.outdir}/execution_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,error_action'
}

// Error strategy
process.errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
process.maxRetries = 3
process.retryDelay = '30 min'
